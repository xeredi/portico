NPM EN LINUX (https://docs.npmjs.com/getting-started/fixing-npm-permissions)
- Cambiar el directorio por defecto de NPM
    - Crear carpeta donde guardar los módulos
        $ mkdir ~/.npm-global
    - Configurar npm para que utilice dicha carpeta
        $ npm config set prefix '~/.npm-global'
    - Modificar el archivo 'vi ~/.bash_profile', añadiendo la entrada:
        export PATH=~/.npm-global/bin:$PATH
    - Refrescar el archivo '.bash_profile'
        $ source ~/.bash_profile
    - Verificar que funciona correctamente:
        $ npm install -g jshint

INSTALACION DE LIBRERIAS
Desde la carpeta del proyecto (coge las librerías definidas en package.json):
	- Instalar:
		$ npm install -g
	- Desinstalar:
		$ npm uninstall -g

INSTALACION MODULOS NPM
$ npm install -g typescript
$ npm install -g @angular/cli
$ npm install -g ionic-framework
$ npm install -g cordova
...


ANGULAR CLI (https://github.com/angular/angular-cli)
- Prepara los ficheros iniciales de un proyecto angular 2
    $ sudo npm install -g @angular/cli
	Opciones
	$ ng help

    Creacion de un proyecto:
    $ ng new PROJECT-NAME
	$ cd PROJECT-NAME
	$ ng serve

	Abrir navegador e ir a: http://localhost:4200/

    Desde la carpeta del proyecto:
    $ ng init
    $ ng init --routing (Crea un módulo para las URL)
- Ejecutar en el servidor de desarrollo:
    $ ng serve
- Generar una distribucion:
    $ ng build
- Creación de módulos:
    $ ng g module my-new-module
    $ ng g module my-new-module --routing
- Creación de componentes:
    $ ng g component my-new-component
    Ej: $ ng g component user-access
- También se pueden crear:
    - Componentes: $ ng g component nombre-componente
    - Directivas:  $ ng g component nombre-directiva
    - Pipes:       $ ng g pipe nombre-pipe
    - Servicios:   $ ng g service nombre-servicio
    - Clases:      $ ng g class nombre-clase
    - Interfaces:  $ ng g interface nombre-interfaz
    - Enums:       $ ng g enum nombre-enum
    - Modulos:     $ ng g module nombre-modulo

ECLIPSE
- Ignorar la carpeta "node_modules" en la validación
    - Seleccionar la carpeta "node_modules" -> Properties
    - Marcar el check "Derived" de "Attributes"



Comandos para instalar una aplicación:
$ npm install
$ npm run tsc
$ npm run serve



Compilar todo a un unico js
$ tsc --out modules.js


Ejemplo blog chuli
http://blog.mgechev.com/2016/06/26/tree-shaking-angular2-production-build-rollup-javascript/

$ npm install typings
$ npm install


Otro ejemplo
http://blog.rangle.io/optimize-your-angular2-application-with-tree-shaking/

$ npm install
$ npm run build
$ npm run build:prod
$ npm run serve

Añadir twitter bootstrap a un proyecto

Instalar bootstrap (Con opcion -g creo que no funciona)
-------------------------------------------------------

$ npm install ng2-bootstrap bootstrap --save

src/app/app.module.ts and add:
	import { AlertModule } from 'ng2-bootstrap/ng2-bootstrap';
	...
	@NgModule({
	...
	imports: [AlertModule.forRoot(), ... ],
	...
	})
angular-cli.json and insert a new entry into the styles array
	"styles": [
		"styles.css",
		"../node_modules/bootstrap/dist/css/bootstrap.min.css"
	],
open src/app/app.component.html and add
	<alert type="success">hello</alert>

Instalar http-proxy-middleware
------------------------------
	http://stackoverflow.com/questions/43067858/angular2-angular-seed-http-proxy-middleware-proxy-api-requests